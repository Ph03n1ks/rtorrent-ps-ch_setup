Additions
=========

.. contents:: **Contents**


Standard Views in rTorrent
--------------------------

This is how `standard views in rTorrent <https://github.com/rakshasa/rtorrent/wiki/User-Guide#main-view-keys>`_ are set up.

===  ==============  =======  =========  =============================
Key  View            Updated  Collapsed  Sorting, filtering properties
===  ==============  =======  =========  =============================
 1   ``main``        20 sec   *          sorted by ``downloaded time`` desc
 2   ``name``        20 sec   *          sorted by ``name``, ``throttle``, ``tracker alias``
 3   ``started``     20 sec   *          sorted by ``last active time`` desc, group by ``complete``, ``throttle``, ``download and upload speed`` desc, ``last xfer time`` desc
 4   ``stopped``              *          sorted by ``loaded time`` desc, group by ``complete``, ``throttle``
 5   ``complete``             *          sorted by ``completed/loaded/downloaded time`` desc
 6   ``incomplete``           *          sorted by ``download and upload speed`` desc, group by ``open`` desc, ``throttle``, ``last xfer time`` desc
 7   ``hashing``                         sorted by ``loaded time``, group by ``throttle``
 8   ``seeding``     20 sec   *          sorted by ``upload speed`` desc, group by ``throttle``, ``last xfer time`` desc, only torrents with peers are shown
 9   ``leeching``    20 sec   *          sorted by ``download and upload speed`` desc, group by ``throttle``, ``last xfer time`` desc, only torrents with peers are shown
 0   ``active``      20 sec   *          sorted by ``download and upload speed`` desc, group by ``open`` desc, ``throttle``, ``complete`` desc, ``last xfer time`` desc, only active or incomplete torrents are shown
===  ==============  =======  =========  =============================


Extra Views in rTorrent
-----------------------

There are extra views defined along with the `standard views in rTorrent <https://github.com/rakshasa/rtorrent/wiki/User-Guide#main-view-keys>`_.

===  ================  =========  =============================
Key  View              Collapsed  Sorting, filtering properties
===  ================  =========  =============================
 ^   ``rtcontrol``     *          
 !   ``messages``      *          sorted by ``completed/loaded/downloaded time`` desc, group by ``throttle``, ``message`` desc
 t   ``trackers``      *          sorted by ``last scrape time`` desc, group by ``tracker alias``
 :   ``tagged``        *          
 <   ``datasize``      *          sorted by ``selected data size`` desc, ``completed/loaded/downloaded time`` desc
 >   ``uploadeddata``  *          sorted by ``uploaded data`` desc, ``completed/loaded/downloaded time``  desc
 %   ``ratio``         *          sorted by ``ratio`` desc, ``uploaded data`` desc, ``completed/loaded/downloaded time``  desc
 @   ``category``      *          sorted by ``category``, ``name``
 ?   ``deletable``     *          sorted by ``loaded time`` desc, group by ``unsafe_data`` desc, ``throttle`` desc, only deletable torrents are shown
 ¬   ``last_xfer``     *          sorted by , ``last xfer time`` desc, group by ``complete``, ``throttle``, ``download and upload speed`` desc, ``last active time`` desc
===  ================  =========  =============================


Extra Columns on Extended Canvas
--------------------------------

The following extra columns are modified / added on the fully customizable `extended canvas <https://github.com/chros73/rtorrent-ps-ch/blob/master/docs/Manual.rst#built-in-columns-in-the-collapsed-display>`_, since in ``rTorrent-PS-CH v1.7.0-0.9.7`` all the columns are configurable (can be disabled or new ones added on-the-fly) except for "Name" and "Tracker Domain" columns. The configuration for the extra columns can be found at the `Extra column definitions <https://github.com/chros73/rtorrent-ps-ch_setup/blob/master/ubuntu-14.04/home/chros73/.pyroscope/rtorrent-ps.rc#L198>`_ section of ``rtorrent-ps.rc``.

.. |_| unicode:: 0xA0
   :trim:

.. table:: This is my table
    :widths: 5 35 60

==============  ================================================  ===========
 Column          Key                                              Description
==============  ================================================  ===========
 ⟲ ⇅            "650:?5C73/5: |_| ⟲ |_| ⇅ |_|"                    ETA / last xfer time (*sacrificial*), on: ``last_xfer`` view; auto-toggled on: ``active``, ``incomplete``, ``leeching`` and ``started`` views only if there's any started incomplete download
 ◷ ↺            "805:?5C21/1C25/1C21/2C25/1: |_| ◷ |_| ↺ |_|"     Elapsed time (time the download took) (*sacrificial*), hidden by default, can be toggled with ``_`` key
 ≣              "810:?4C9/3C21/1: |_| ≣ |_| |_| "                  Chunk Size (*sacrificial*), hidden by default, can be toggled with ``_`` key
 ◷ ⤵            "812:?5C21/1C20/1C21/2C20/1: |_| ◷ |_| ⤵ |_|"     Downloaded time (*sacrificial*), only on: ``main`` view
 ◷ ⤴            "816:?5C21/1C20/1C21/2C20/1: |_| ◷ |_| ⤴ |_|"     Loaded time (*sacrificial*), only on: ``deletable``, ``hashing`` and ``stopped`` views
 ⟲ ↺⤴⤵          "820:?5C21/1C20/1C21/2C20/1:⟲ |_| ↺⤴⤵"            Last scrape time (*sacrificial*), only on: ``trackers`` view
 Domain         "830:?14:Domain"                                    Domain (*sacrificial*), only on: ``trackers`` view
 ⣿‰             "910:?2C94/2:⣿‰"                                    Progress (numeric) (*sacrificial*), on: ``hashing`` view;  auto-toggled (and replaces built-in 'Progress' column) on: ``active``, ``incomplete``, ``leeching`` and ``started`` views only if there's any started incomplete download
 ☯ ‰            "930:?5C93/5: |_| ☯ |_| ‰ |_|"                      Ratio (numeric) (*sacrificial*), on: ``complete``, ``last_xfer``, ``ratio``, ``seeding``, ``stopped`` and ``uploadeddata`` views, can be toggled with ``_`` key
 ⊘              "951:1C72/1:⊘"                                    Throttle (none = global, ∞ = NULL, ⊼ = slowup, ⊻ = tardyup throttle)
 ◎              "960:1C71/1:◎"                                    Unsafe-data (none = safe data, ⊘ = unsafe data, ⊗ = unsafe data with delqueue)
 ⊕              "970:1:⊕"                                         Data directory (none = base path entry is missing, otherwise the first letter of the name of data directory)
==============  ================================================  ===========



Extra Keyboard shortcuts in rTorrent
------------------------------------

There are extra keyboard shortcuts defined along with the `original ones in rTorrent <https://github.com/rakshasa/rtorrent/wiki/User-Guide#navigating>`_.

====  ========================================
Key   Functionality
====  ========================================
 \*   toggle collapsed/expanded display (defined in ``rTorrent-PS-CH``)
  /   toggle sacrificial columns manually (defined in ``rTorrent-PS-CH``)
 ^F   search for a term in the name of download (defined in ``rTorrent-PS-CH``)
 F3   search next (defined in ``rTorrent-PS-CH``)
 F    subfilter the current view based on the name of downloads by entering a regexp (capital ``f``) (defined in ``rTorrent-PS-CH``)
↑, ↓  prev, next in input history (at any input prompt, e.g. at ``^x``) (defined in ``rTorrent-PS-CH``)
ESC   exit from any input prompt (e.g. at ``^x``) (defined in ``rTorrent-PS-CH``)
 }    toggle ``unsafe_data`` for a download item
 #    send manual scrape request for a download item
 .    toggle tag for a download item
 T    clear ``tag`` view
 ^g   display tags for a download item
 _    toggle visibility of specified columns ('Elapsed time', 'Chunk size', 'Ratio (numeric)') on collapsed display
 \|   toggle selectable themes
 =    toggle autoscale network history
home  Home
end   End
pgup  Pageg Up
pgdn  Page Down
 F2   display quick help resources
 ^q   DISABLED (used to exit rtorrent)
====  ========================================



Extra Variables in rTorrent config files
---------------------------------------

The following variables are added in rTorrent config files.

cfg.inotify.use
^^^^^^^^^^^
Determines whether to use inotify for loading/removing torrent (meta) files from watch directories.

- values ``[0|1]``, ``1`` means inotify will be used

cfg.blocklist.use
^^^^^^^^^^^
Determines whether to use the provided p2p blocklist with IPv4 Filter to stop connecting to unwanted peers.

- values ``[0|1]``, ``1`` means blocklist will be used

cfg.magnet_link.queue
^^^^^^^^^^^
Determines whether to queue a magnet link download upon initial downloading (to be able to use `Queue Manager <Queue-Manager>`_) instead of start downloading it straight away when `addMagnetLinksNative.sh <Additions#addmagnetlinksnative-sh>`_ helper script is used.

- values ``[0|1]``, ``1`` means resulted torrent (meta) files will be queued.

cfg.external_dnscache.use
^^^^^^^^^^^
Determines whether to use external DNS cache instead of the built-in one of CURL.

- values ``[0|1]``, ``1`` means external DNS cache will be used.

cfg.interface.bind
^^^^^^^^^^^
Sets an interface with IPv4 address to bind to.

- values ``[eth0|tun0|...]``

cfg.scrape_interval.[active|idle]
^^^^^^^^^^^
Sets scrape intervals for active (``580`` ~10 mins) and idle items (``43180`` ~12 hours).

pyro.last_xfer.min_rate
^^^^^^^^^^^
Sets the min uprate/downrate threshold for last_xfer custom field in Bytes.

cfg.slowup.d.[peers_min|peers_max|uploads_max]
^^^^^^^^^^^
Values used for ``min_peers`` / ``max_peers`` / ``max_uploads`` settings of downloads that belong to non-special groups and those values will be overridden by per torrent settings in Favouring section of main config file.

cfg.[slowup|tardyup].uprate.[min|max]
^^^^^^^^^^^
Values used for getting the upload rate limit for throttle groups in KB.

cfg.[slowup|tardyup].slots.[leech|seed].max
^^^^^^^^^^^
Values used for getting the max number of upload/download slots during leeching and seeding for choke groups.

cfg.global.downrate.[min|max], cfg.global.[upall|upmain].threshold
^^^^^^^^^^^
Values used for getting the global download rate limit in KB.

cfg.global.slot.uprate.min
^^^^^^^^^^^
Min value of uprate per upload slot (unchoked peers) in KB.

cfg.dir.[main|sub|incomplete|meta_downl|meta_compl|delqueue|session|logs]
^^^^^^^^^^^
Directory constants.

cfg.postfix
^^^^^^^^^^^
Custom string that can help to use different config files, scripts with different setups based on naming. It can be an empty string as well.

cfg.theme.[0|1|2]
^^^^^^^^^^^
Define selectable color theme configs.

pyro.bin_dir
^^^^^^^^^^^
Sets "pyro.bin_dir" to the "bin" directory where the ``pyrocore`` tools are installed. Make sure you end it with a "/". If this is left empty, then the shell's path is searched

pyro.[extended|extended.ch]
^^^^^^^^^^^
Determines whether to activate rTorrent-PS / rTorrent-PS-CH features.

pyro.[log_archival|log_retention].days
^^^^^^^^^^^
Sets archival and retention delay in days for log rotation if it's enabled.

[system.]startup_time=
^^^^^^^
A constant value that holds the ``system.time`` when the client was started.


Extra Attributes in rTorrent config files
---------------------------------------

The following custom field attributes are added in rTorrent config files.

unsafe_data
^^^^^^^^^^^
Determines whether data of a torrent is deletable.

-  ``unsafe_data`` : values ``[|0|1|2]``, ``1`` means ``unsafe_data``, ``2`` means ``unsafe_data in delete queue``

data_dir
^^^^^^^^
Determines the sub-directory (category) for data of a torrent. It's used with watch directories and continously updated during the lifetime of a torrent.

-  ``data_dir`` : name of category, e.g. ``unsafe``, ``rotating``

meta_dir
^^^^^^^^
Determines the sub-directory (category) for meta file of a torrent. It's used with watch directories and continously updated during the lifetime of a torrent.

-  ``meta_dir`` : name of category, e.g. ``unsafe``, ``rotating``

orig_category
^^^^^^^^
Name of category the download was originally assigned to.

tm_downloaded
^^^^^^^^^^^^^^
Timestamp, time the torrent file was downloaded (created locally).

tm_loaded
^^^^^^^^^^^^^^
Timestamp, time the torrent was loaded into client.

tm_started
^^^^^^^^^^^^^^
Timestamp, first time the torrent was started.

tm_completed
^^^^^^^^^^^^^^
Timestamp, time of completion of the torrent.

last_active
^^^^^^^^^^^^^^
Timestamp, last time the torrent had peers.

last_xfer
^^^^^^^^^^^^^^
Timestamp, last time the torrent had transfered data.

activations
^^^^^^^^^^^^^^
Activation intervals.

tm_last_scrape
^^^^^^^^^^^^^^
Timestamp, last time when a scrape request was sent for the torrent.


Extra Commands in rTorrent config files
---------------------------------------

The following commands can be used in rtorrent with ``^x``.

d.move_to=category_name,special_group,unsafe_data
^^^^^^^^^^^^^^^^^^
Moves data (can be partially downloaded) and meta (.torrent) file of a torrent into another directories at the same time and updates all necessary attributes of it.

-  ``category_name`` : one of the category directories, e.g. ``unsafe``, ``songs``, etc
-  ``special_group`` : boolean, values ``[|0|1]``, ``1`` means special group 
-  ``unsafe_data`` : values ``[|0|1|2]``, ``1`` means ``unsafe_data``, ``2`` means ``unsafe_data in delete queue``

Example usage: ``d.move_to=rotating,1,1``, ``d.move_to=rotating,1,2``, ``d.move_to=fullseed,1,``, ``d.move_to=unsafe,,1``, ``d.move_to=unsafe,,2``, ``d.move_to=various,,`` 

d.move_meta_to=category_name
^^^^^^^^^^^^^^^^^^
Moves a finished, stucked meta file from the downloading directory into its final place (thanks to the simetimes missing ``meta_dir`` custom field value, rtorrent bug on OpenWRT?). It can also be useful if a category name is changed.

-  ``category_name`` : one of the category directories, e.g. ``unsafe``, ``songs``, etc

Example usage: ``d.move_meta_to=rotating``, ``d.move_meta_to=fullseed``, ``d.move_meta_to=unsafe``, ``d.move_meta_to=various`` 

d.data_path=
^^^^^^^^^^^^^^^^^^
Gets the full path of data of a torrent (it's a workaround for the possibly empty `d.base_path` attribute).

d.session_file=
^^^^^^^^^^^^^^^^^^
Gets the full path of the session file of a torrent.

d.remove_data=
^^^^^^^^^^^^^^
Deletes data of a torrent if data dir/file of a torrent exists and its data is not bogus and removes symlink for its metafile if it exists or prints out an error message.

d.add_to_delqueue=
^^^^^^^^^^^^^^^^^^
Adds torrent to delete queue by creating a symlink in ``.delqueue`` dir to its metafile and setting ``unsafe_data`` custom variable to ``2``. This command is bind to ``}`` key.

d.remove_from_delqueue=[unsafe_data]
^^^^^^^^^^^^^^^^^^^^^^^
Removes torrent from delete queue by deleting its symlink if it exists from ``.delqueue`` dir. This command is bind to ``}`` key.

-  ``unsafe_data`` : optional parameter, values ``[|0|1]``, ``1`` means ``unsafe_data``

Usage: ``d.remove_from_delqueue=``, ``d.remove_from_delqueue=1``

d.fix_delqueue_flag=
^^^^^^^^^^^^^^^^^^
Fixes ``unsafe_data`` values depending on a symlink in ``.delqueue`` directory exists or not. Useful if symlinks are sometimes created manually or by a script in ``.delqueue`` dir.

d.get_ratio_float=
^^^^^^^^^^^^^^
Returns d.ratio as float formatted string.

d.get_progress_num=
^^^^^^^^^^^^^^^^^^
Returns progress in numeric format.

d.modify_slots_both=
^^^^^^^^^^^^^^^^^^
Modifies the ``peers_min``, ``peers_max``, ``max_uploads`` values of a torrent for both downloading and uploading based on which group (special or not) it belongs to.

d.last_scrape.send_set=
^^^^^^^^^^^^^^^^^^
Sends scrape request for a torrent, sets its ``tm_last_scrape`` timestamp custom field and saves its session. This command is bind to ``#`` key.

It won't affect the operation of rtorrent, but nice to have these values updated. This info is only updated when rtorrent starts or a torrent is added by default. Although this setup regularly updates scrape information for all torrents (even stopped ones), sometimes this command can be useful.

d.timestamp.downloaded=
^^^^^^^^^^^^^^
The modification time of the ``d.tied_to_file`` or else ``system.time``. This is set once when an item is newly added to the download list, so a later ``d.delete_tied`` does not change it.

d.timestamp.last_active=
^^^^^^^^^^^^^^
Last time any peer was connected. This is checked at least once per minute, but very short connections might not be recorded. Redefine the ``pyro_update_last_active`` schedule if you want the check to run at a different frequency.

d.timestamp.last_xfer=
^^^^^^^^^^^^^^
Last time any data was transferred for this item. ``pyro.last_xfer.min_rate`` sets the threshold in bytes below which activity is not counted, and defaults to ``5000``. Do not set this too low, since there is always some accounting traffic on an item, when peers connect and then are not interested in transferring actual data. Checking is done several times per minute, but very short transfer bursts might not be recorded. Redefine the ``pyro_update_last_xfer`` schedule if you want the check to run at a different frequency.

d.last_xfer.is_active=
^^^^^^^^^^^^^^
Checks that threshold against both current upstream and downstream traffic.

pyro.print_help=
^^^^^^^
Displays quick help resources.

pyro.ui.messages.show=
^^^^^^^
Switches current view to ``messages`` and prints the size of the view.

pyro.view.toggle_visible=view_name
^^^^^^^
Sets view visible.

uptime=
^^^^^^^
Returns uptime (with the help of ``getElapsedTime.sh`` script) in the form of ``Up: 6 years, 5 months, 18 days, 02:39:57``. Year/month info isn't shown if their value is 0.

hrf_time=timestamp
^^^^^^^
Displays any valid timestamp value in human readable format or print the value itself (e.g.: ``30/06/2013 23:47:33``).

Usage: ``hrf_time=$d.creation_date=``, ``hrf_time=$d.custom=tm_last_scrape``

get_uprate_main=
^^^^^^^
Gets current uprate in KB for special group.

get_total_rotating_size=
^^^^^^^
Gets total size of rotating and unsafe downloads.

os.path.mtime=/path/to/file[,cmd]
^^^^^^^^^^^^
Gets mtime of a path or return 2nd argument when path does not exist.

pyro.import=rtconfig_filename
^^^^^^^^^^^^
Imports the specified config file from ``~/.pyroscope/`` directory.

-  ``rtconfig_filename`` : name of rtorrent config file in ``~/.pyroscope/`` directory, e.g. ``rtorrent-ps.rc``, ``color_scheme256-happy_pastel.rc``

Usage: pyro.import="color_scheme256-happy_pastel.rc"

quit=
^^^^^^^
Exits ``rTorrent`` gracefully.


Extra Bash functions
--------------------

rtlistOrphans
^^^^^^^^^^^^^
List orphaned torrents.

Usage: ``rtlistOrphans``

rtlistOrphanMetas
^^^^^^^^^^^^^
List orphaned torrent (meta) files.

Usage: ``rtlistOrphanMetas``

rtlistPublic
^^^^^^^^^^^^^
List public torrents.

Usage: ``rtlistPublic``

rtlistStuck
^^^^^^^^^^^
List stuck torrents in incomplete directory.

Usage: ``rtlistStuck``

rtlistMessages
^^^^^^^^^^^^^^
List torrents with unusual trackers messages.

Usage: ``rtlistMessages``

rtlistStopped
^^^^^^^^^^^^^
List stopped torrents.

Usage: ``rtlistStopped``

rtgetTotalRotatingSize
^^^^^^^^^^^^^^^^^^^^^^
Get total size of rotating and unsafe torrents.

Usage: ``rtgetTotalRotatingSize``



Extra Bash scripts
------------------

addMagnetLinksAria2.sh
^^^^^^^^^^^^^^^^
Downloads and creates torrent files from magnet URIs into one of the queue directories of rTorrent. If 'category' parameter isn't given then a selection dialog is displayed. Requires: ``dialog`` and ``aria2`` commands.

Usage: 

.. code-block:: sh

   addMagnetLinksAria2.sh [category] "magnet:?xt=urn:btih:foo…" ["magnet:?xt=urn:btih:bar…", …]

addMagnetLinksNative.sh
^^^^^^^^^^^^^^^^
Creates magnet torrent files from magnet URIs into one of the watch directories of rTorrent. If 'category' parameter isn't given then a selection dialog is displayed. Requires: ``dialog`` command.

Usage:

.. code-block:: sh

   addMagnetLinksNative.sh [category] "magnet:?xt=urn:btih:foo…" ["magnet:?xt=urn:btih:bar…", …]

doBackup.sh
^^^^^^^^^^^
Backup session directory of rtorrent.

Usage: ``doBackup.sh``

queueTorrent.sh
^^^^^^^^^^^^^^^
Queue management script with rotating (deleting data) capability and category support (that can be included into a main script as well).

Usage: ``queueTorrent.sh`` or including in a main script: ``. "${BASH_SOURCE%/*}/queueTorrent.sh"``

reportMessages.sh
^^^^^^^^^^^^^^^^^
Send email report about any torrent with unusual tracker message.

Usage: ``reportMessages.sh``

reportOrphans.sh
^^^^^^^^^^^^^^^^
Send email report about any orphaned torrent.

Usage: ``reportOrphans.sh``

reportOrphanMetas.sh
^^^^^^^^^^^^^^^^
Send email report about any orphaned meta files.

Usage: ``reportOrphanMetas.sh``

reportPublic.sh
^^^^^^^^^^^^^^^^
Send email report about any public torrent.

Usage: ``reportPublic.sh``

reportStopped.sh
^^^^^^^^^^^^^^^^
Send email report about any torrent that is stopped.

Usage: ``reportStopped.sh``

reportStuck.sh
^^^^^^^^^^^^^^
Send email report about any stuck torrent in incomplete directory.

Usage: ``reportStuck.sh``

reportLowRotatingSpace.sh
^^^^^^^^^^^^^^
Send email report about low rotating space (in rotating and unsafe directory, including free space).

Usage: ``reportLowRotatingSpace.sh``

rtUtils.sh
^^^^^^^^^^
General script with helper functions that can be included into main scripts.

Usage: including in a main script: ``. "${BASH_SOURCE%/*}/rtUtils.sh"``

sampleDownload.sh
^^^^^^^^^^^^^^^^^
Sample download script to demonstrate usage of inclusion of queue script inside a main script.

Usage: ``sampleDownload.sh``

rtorrent init script
^^^^^^^^^^^^^^^^^^^^
Init script. It can be installed and enabled by running: ``sudo update-rc.d rtorrent defaults 92`` and ``sudo update-rc.d rtorrent enable``.

Usage: ``sudo /etc/init.d/rtorrent [start|stop|restart|force-reload|status]``
